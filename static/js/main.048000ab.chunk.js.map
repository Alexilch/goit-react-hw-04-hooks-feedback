{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","buttonswrap","map","option","type","button","status","onClick","Statistics","good","neutral","bad","total","positivePercentage","statresults","Section","title","children","section","Notification","message","App","useState","setgood","setbad","setneutral","countTotal","prevgood","prevbad","prevneutral","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,YAAc,kC,iBCAhCD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,qICEb,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKC,UAAWC,IAAEC,YAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLL,UAAWC,IAAEK,OAEbC,OAAQH,EACRI,QAAS,kBAAMT,EAAgBK,IALjC,SAOGA,GAJIA,Q,oBCPA,SAASK,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,QAEZ,oBAAGZ,UAAWC,IAAEc,YAAhB,oBAAqCF,KACrC,oBAAGb,UAAWC,IAAEc,YAAhB,uBAAwCD,EAAxC,U,oBCDSE,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACE,6BAAKF,IACJC,M,gBCLQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,oBAAIrB,UAAWC,IAAEoB,QAAjB,SAA2BA,ICKrB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOX,EAAP,KAAYa,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBe,EAAhB,KAiBMC,EAAa,WACjB,OAAOjB,EAAOC,EAAUC,GAO1B,OACE,gCACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAACpB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5Be,SAACK,GACtB,OAAQA,GACN,IAAK,OACHoB,GAAQ,SAAAI,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,MACHH,GAAO,SAAAI,GAAO,OAAIA,EAAU,KAC5B,MACF,IAAK,UACHH,GAAW,SAAAI,GAAW,OAAIA,EAAc,KACxC,MACF,QAAS,aAoBS,IAAjBH,IACC,cAACP,EAAD,CAAcC,QAAQ,yBAEtB,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBApBDiB,KAAKC,MAAOtB,EAAOiB,IAAgB,MAAQ,SC5BtDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.048000ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3pi5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statresults\":\"Statistics_statresults__1PB1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2VJuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2Nvv2\"};","import PropTypes from 'prop-types';\r\nimport s from './Feedback.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.buttonswrap}>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          key={option}\r\n          status={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  option: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n      </ul>\r\n      <p className={s.statresults}>Total: {total}</p>\r\n      <p className={s.statresults}>Positive: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <h2 className={s.message}>{message}</h2>;\r\n}\r\n","import  { useState } from 'react';\r\nimport FeedbackOptions from './components/Feedback';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section/Section';\r\nimport Notification from './components/Notification';\r\n\r\n// const options = ['good', 'neutral', 'bad']\r\n\r\nexport default function App() {\r\n  const [good, setgood] = useState(0);\r\n  const [bad, setbad] = useState(0);\r\n  const [neutral, setneutral] = useState(0);\r\n  \r\n  const handleFeedback = (option) => {\r\n    switch (option){\r\n      case 'good':\r\n        setgood(prevgood => prevgood + 1)\r\n        break;\r\n      case 'bad':\r\n        setbad(prevbad => prevbad + 1)\r\n        break;\r\n      case 'neutral':\r\n        setneutral(prevneutral => prevneutral + 1)\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n\r\n  const countTotal = () => {\r\n    return good + neutral + bad;\r\n  };\r\n  \r\n  const countPositivePercentage = () => {\r\n    return Math.round((good / countTotal()) * 100) || 0;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please Leave feedback\">\r\n        <FeedbackOptions\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={handleFeedback}\r\n        />\r\n      </Section>\r\n      {countTotal() === 0 ? (\r\n        <Notification message=\"There is no feedback\"></Notification>\r\n      ) : (\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotal()}\r\n            positivePercentage={countPositivePercentage()}\r\n          />\r\n        </Section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Appold extends Component {\r\n\r\n\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   handleFeedback = option => {\r\n//     this.setState(prevState => ({\r\n//       [option]: prevState[option] + 1,\r\n//     }));\r\n//   };\r\n\r\n//   countTotal = () => {\r\n//     const { good, neutral, bad } = this.state;\r\n//     return good + neutral + bad;\r\n//   };\r\n\r\n//   countPositivePercentage = () => {\r\n//     const { good } = this.state;\r\n//     return Math.round((good / this.countTotal()) * 100) || 0;\r\n//   };\r\n\r\n//   render() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <Section title=\"Please Leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={Object.keys(this.state)}\r\n//             onLeaveFeedback={this.handleFeedback}\r\n//           />\r\n//         </Section>\r\n//         {this.countTotal() === 0 ? (\r\n//           <Notification message=\"There is no feedback\"></Notification>\r\n//         ) : (\r\n//           <Section title=\"Statistics\">\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={this.countTotal()}\r\n//               positivePercentage={this.countPositivePercentage()}\r\n//             />\r\n//           </Section>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}